@model Assignment5.Controllers.TrackAddForm

@{
    ViewBag.Title = "Create";
}

<h2>Add New Track</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <p class="text-info ">Please complete the form and click submit.</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autofocus="autofocus" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Composer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Composer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Composer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Milliseconds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Milliseconds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Milliseconds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Editted DropDowList  -  AlbumList*@
        <div class="form-group">
            @Html.LabelFor(model => model.AlbumList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AlbumId", Model.AlbumList, htmlAttributes: new { @class = "form-control", @size = "8" })
                @Html.ValidationMessageFor(model => model.AlbumId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Editted Radio button  -  MediaTypeList*@
        <div class="form-group">
            @Html.LabelFor(model => model.MediaTypeList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var i in Model.MediaTypeList)
                {                                                
                    <label class="radio-inline">  
                       @Html.RadioButtonFor(model => model.MediaTypeId, i.Value) @i.Text
                       @*<input type="radio" name="MediaTypeId" value="@i.Value" required/>@i.Text*@
                    </label>
                }
                <br/>
                @Html.ValidationMessageFor(model => model.MediaTypeId, "", new { @class = "text-danger" })
             </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
